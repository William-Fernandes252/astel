[tool]
[tool.poetry]
name = "naja"
version = "0.1.0"
homepage = "https://github.com/William-Fernandes252/naja"
description = "Python package for asyncronous web crawling."
authors = ["William Fernandes Dias <william.winchester1967@gmail.com>"]
readme = "README.md"
license = "MIT"
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [{ include = "naja" }, { include = "tests", format = "sdist" }]

[tool.poetry.dependencies]
python = ">=3.8.18,<4.0"
click = "8.0.1"

black = { version = "^21.5b2", optional = true }
isort = { version = "^5.8.0", optional = true }
mypy = { version = "^0.900", optional = true }
pytest = { version = "^6.2.4", optional = true }
pytest-cov = { version = "^2.12.0", optional = true }
tox = { version = "^3.20.1", optional = true }
virtualenv = { version = "^20.2.2", optional = true }
pip = { version = "^20.3.1", optional = true }
mkdocs = { version = "^1.1.2", optional = true }
mkdocs-include-markdown-plugin = { version = "^1.0.0", optional = true }
mkdocs-material = { version = "^6.1.7", optional = true }
mkdocstrings = { version = "^0.15.2", optional = true }
mkdocs-material-extensions = { version = "^1.0.1", optional = true }
twine = { version = "^3.3.0", optional = true }
mkdocs-autorefs = { version = "^0.2.1", optional = true }
pre-commit = { version = "^2.12.0", optional = true }
toml = { version = "^0.10.2", optional = true }
bump2version = { version = "^1.0.1", optional = true }
httpx = "^0.25.0"
tldextract = "^3.6.0"
hypothesis = { version = "^6.88.1", optional = true }
pytest-xdist = { version = "^3.3.1", optional = true }
pytest-sugar = { version = "^1.0.0", optional = true }

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "pytest-sugar",
    "mypy",
    "pytest-cov",
    "hypothesis",
    "pytest-xdist",
]
dev = [
    "tox",
    "pre-commit",
    "virtualenv",
    "pip",
    "twine",
    "toml",
    "bump2version",
]
doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
]

[tool.poetry.scripts]
naja = 'naja.cli:main'

[tool.black]
line-length = 88
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py"]
python_functions = ["test_*", "it_*", "its_*"]
testpaths = ["tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
